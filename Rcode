## Create the board
board= matrix("NA",nrow = 3,ncol = 3)

move=function(m_player,row,column,m_board){## Make a move
  if(m_player=="X")
    m_board[row,column]="X"
  else if(m_player=="O")
    m_board[row,column]="O"
  return(m_board)
}

check_win=function(m_player,m_board){ ##Check whether the player has won
  for(row in 1:3){
    if(sum(m_board[row,]==m_player)==3) #Check row, if the sum is 3, meaning the player has won
      return(TRUE)
  }
  for(column in 1:3){
    if(sum(m_board[,column]==m_player)==3) #Check column
      return(TRUE)
  }
  if(sum(diag(x=m_board)==m_player)==3) #Diagonal
    return(TRUE)
  if(m_board[1,3]=="X" && m_board[2,2]=="X" && m_board[3,1]=="X")#The other diagonal
    return(TRUE)
  if(m_board[1,3]=="O" && m_board[2,2]=="O" && m_board[3,1]=="O")
    return(TRUE)
  return(FALSE)
}

generate_random=function(m_comp,m_board){
  check=FALSE
  while(check==FALSE){
    comp_row=sample(1:3,1) #Generate random position for computer
    comp_col=sample(1:3,1)
    if(m_board[comp_row,comp_col]=="NA"){ ##The grid is not occupied
      m_board=move(m_comp,comp_row,comp_col,m_board)
      check=TRUE
    }
  }
  return(m_board)
}

illegal=TRUE
while(illegal){ ##Loop through to make sure the user input is legal
  if (interactive()) {
    con <- stdin()
  } else {
    con <- "stdin"
  }
  cat("X or O? ")
  choice <-as.character(readLines(con = con, n = 1)) #Change input into character
  if(choice!="X" && choice!="O"){
    cat("Invalid Selection. Choose X or O.", "\n")}else{
    illegal=FALSE}
}


if(choice=="X"){
  computer="O"}else{
  computer="X"}

player="X" # "X" always goes first


for(i in 1:9){
  Sys.sleep(1)
  cat("################ Round",i,"#####################","\n")
  cat("@@@@@@@@@@@@@$$$$$$$$ Play Wise!$$$$$$$$@@@@@@@@@@@@@@@@","\n")
  cat("################ Current Board ####################","\n")
  print(board)
  cat("###################################################","\n")
  if(choice==player){
    valid=FALSE
    while(valid==FALSE) ##Check whether the input is legal or not 
    {
      cat("Player",choice,"'s turn(Your turn):","\n")
      if (interactive()) {
        con <- stdin()
      } else {
        con <- "stdin"
      }
      cat("What row? ")
      m_row <- as.character(readLines(con = con,n=1))
      cat("What column? ")
      m_col <- as.character(readLines(con=con,n=1))
      if((m_row!="1" && m_row!="2" && m_row!="3" )||((m_col!="1" && m_col!="2" && m_col!="3" ))){
        cat("Invalid Selection. Choose 1, 2, or 3 for row and column","\n")}else
      {
        m_row=as.double(m_row)
        m_col=as.double(m_col)
        if(board[m_row,m_col]!="X" && board[m_row,m_col]!="O")
        {
          if (interactive()) {
            con <- stdin()
          } else {
            con <- "stdin"
          }
          cat("Place",choice,"at row",m_row,"column",m_col,"? [y/n] ")
          choice2<-as.character(readLines(con=con,n=1))
          if(choice2=="y"){
            cat("Move placed!","\n")
            board=move(choice,m_row,m_col,board)
            valid=TRUE} else{
              cat("Move not placed!","\n")
              next
            }
        }else if(board[m_row,m_col]!="X" || board[m_row,m_col]!="O"){
          cat("Already occupied, choose somewhere else", "\n")}
      }
    }
  }else{ ## Computer's turn
    cat("Player",computer, "'s turn:","\n")
    cat("Computer Registered!","\n")
    count=0
    for(row in 1:3){
      if(sum(board[row,]==choice)==2){ #Check row, if the sum is 2, computer must stop the human
        for(j in 1:3){
          if(board[row,j]=="NA"){
            board=move(computer,row,j,board)
            count=1
          }
        }
      }
    } 
    if(count==0){
      for(col in 1:3){
        if(sum(board[,col]==choice)==2){
          for(j in 1:3){
            if(board[j,col]=="NA"){
              board=move(computer,j,col,board)
              count=1
            }
          }
        }
      } 
    }
    if(count==0){ #Diagonal
      if(sum(diag(x=board)==choice)==2){
        board=move(computer,3,3,board)
        count=1
      }
    }
    if(count==0){ #Diagonal
      check1=(board[1,3]=="X" && board[2,2]=="X") || (board[1,3]=="O" && board[2,2]=="O")
      check2=(board[1,3]=="X" && board[3,1]=="X") || (board[1,3]=="O" && board[3,1]=="O")
      check3=(board[2,2]=="X" && board[3,1]=="X") || (board[2,2]=="O" && board[3,1]=="O")
      if(check1==TRUE){
        board=move(computer,3,1,board)
        count=1
      }else if(check2==TRUE){
        board=move(computer,2,2,board)
        count=1
      }else if(check3==TRUE){
        board=move(computer,1,3,board)
        count=1
      }
    }
    if(count==0){
      board=generate_random(computer,board)}
  }
  
  if(check_win(player,board)){
    cat("################ Current Board ####################","\n")
    print(board)
    cat("###################################################","\n")
    cat(player,"wins!","\n")
    break
  }
  if(player=="X"){ ## Each player take turn to do something
    player="O"
  }else{
    player="X"
  }
}

num=0
for(i in board){
  if(i=="NA"){
    num=num+1}else{
      next
    }
}
if(num==0){
  cat("################ Current Board ####################","\n")
  print(board)
  cat("###################################################","\n")
  cat("The game has come to a stalemate!","\n")}
